{"remainingRequest":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/babel-loader/lib/index.js!/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue2-verify/src/components/Verify/VerifyCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue2-verify/src/components/Verify/VerifyCode.vue","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKLyoqCiAqIENvZGUKICogQGRlc2NyaXB0aW9uIOW4uOinhOeahOWbvueJh+aWh+Wtl+ivhuWIq+aIluiAheaVsOWtl+iuoeeulwogKiAqLwppbXBvcnQgeyBfY29kZV9jaGFycywgX2NvZGVfY29sb3IxLCBfY29kZV9jb2xvcjIgfSBmcm9tICcuLi8uLi9saWIvdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVmVyaWZ5Q29kZScsCiAgcHJvcHM6IHsKICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICcxJwogICAgfSwKICAgIC8v5L2N5pWw77yM5LuF5ZyodHlwZT0y5pe255Sf5pWICiAgICBmaWd1cmU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICAiZGVmYXVsdCI6IDEwMAogICAgfSwKICAgIC8v566X5rOV77yM5pSv5oyB5Yqg5YeP5LmY77yMMOS4uumaj+acuu+8jOS7heWcqHR5cGU9MuaXtueUn+aViAogICAgYXJpdGg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICAiZGVmYXVsdCI6IDAKICAgIH0sCiAgICB3aWR0aDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJzIwMHB4JwogICAgfSwKICAgIGhlaWdodDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJzYwcHgnCiAgICB9LAogICAgZm9udFNpemU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICczMHB4JwogICAgfSwKICAgIGNvZGVMZW5ndGg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICAiZGVmYXVsdCI6IDYKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0VuZDogZmFsc2UsCiAgICAgIC8vIOi+k+WFpeeahOWAvAogICAgICBpbnB1dFZhbHVlOiAnJywKICAgICAgLy8g6aKc6ImyCiAgICAgIGNvbnRhaW5lckJhY2tncm91bmRDb2xvcjogJyNmZmYnLAogICAgICBjb250YWluZXJDb2xvcjogJyNmZmYnLAogICAgICBjb2RlQ2hvc2U6ICcnLAogICAgICAvLyDlupTor6XovpPlhaXnmoRjb2RlCiAgICAgIGNvZGVTaG93OiBbXSAvLyDmmL7npLrnlKjnmoQKCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy5zZXRDb2RlKCk7CiAgICAgIHRoaXMuJHBhcmVudC4kZW1pdCgncmVhZHknLCB0aGlzKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBzZXRDb2RlCiAgICAgKiBAZGVzY3JpcHRpb24g6K6+572u6aqM6K+B56CBCiAgICAgKiAqLwogICAgc2V0Q29kZTogZnVuY3Rpb24gc2V0Q29kZSgpIHsKICAgICAgaWYgKHRoaXMuaXNFbmQgPT0gZmFsc2UpIHsKICAgICAgICB0aGlzLmNvbnRhaW5lckJhY2tncm91bmRDb2xvciA9IF9jb2RlX2NvbG9yMVtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzKV07CiAgICAgICAgdGhpcy5jb250YWluZXJDb2xvciA9IF9jb2RlX2NvbG9yMltNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KV07CiAgICAgICAgdGhpcy5pbnB1dFZhbHVlID0gJyc7CiAgICAgICAgdGhpcy5jb2RlU2hvdyA9IFtdOwogICAgICAgIHRoaXMuY29kZUNob3NlID0gJyc7CgogICAgICAgIGlmICh0aGlzLnR5cGUgPT09ICcxJykgewogICAgICAgICAgLy/mma7pgJrpqozor4HnoIEg5Zu+54mH6YCJ5oupCiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuY29kZUxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBjaGFyTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNTIpOwogICAgICAgICAgICB2YXIgdG1wU3R5bGUgPSBjaGFyTnVtICUgMiA9PSAwID8gImZvbnQtc3R5bGU6aXRhbGljO21hcmdpbi1yaWdodDogMTBweCIgOiAiZm9udC13ZWlnaHQ6Ym9sZGVyIjsKICAgICAgICAgICAgdG1wU3R5bGUgKz0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMikgPT0gMSA/ICJmb250LXdlaWdodDpib2xkZXIiIDogIiI7CiAgICAgICAgICAgIHRoaXMuY29kZUNob3NlICs9IF9jb2RlX2NoYXJzW2NoYXJOdW1dOwogICAgICAgICAgICB0aGlzLmNvZGVTaG93LnB1c2goewogICAgICAgICAgICAgIHN0eWxlOiB0bXBTdHlsZSwKICAgICAgICAgICAgICAiY2hhciI6IF9jb2RlX2NoYXJzW2NoYXJOdW1dCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAodGhpcy50eXBlID09PSAnMicpIHsKICAgICAgICAgIC8vIOeul+azlemqjOivgeeggQogICAgICAgICAgdmFyIG51bTEgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLmZpZ3VyZSk7CiAgICAgICAgICB2YXIgbnVtMiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuZmlndXJlKTsKICAgICAgICAgIHZhciBjb2RlU2hvdyA9ICcnOwoKICAgICAgICAgIGlmICh0aGlzLmFyaXRoID09IDApIHsKICAgICAgICAgICAgdmFyIHRtcGFyaXRoID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMyk7CiAgICAgICAgICB9CgogICAgICAgICAgc3dpdGNoICh0bXBhcml0aCkgewogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgdGhpcy5jb2RlQ2hvc2UgPSBwYXJzZUludChudW0xKSArIHBhcnNlSW50KG51bTIpOwogICAgICAgICAgICAgIGNvZGVTaG93ID0gbnVtMSArICcgKyAnICsgbnVtMiArICcgPSA/JzsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBpZiAocGFyc2VJbnQobnVtMSkgPCBwYXJzZUludChudW0yKSkgewogICAgICAgICAgICAgICAgdmFyIHRtcG51bSA9IG51bTE7CiAgICAgICAgICAgICAgICBudW0xID0gbnVtMjsKICAgICAgICAgICAgICAgIG51bTIgPSB0bXBudW07CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB0aGlzLmNvZGVDaG9zZSA9IHBhcnNlSW50KG51bTEpIC0gcGFyc2VJbnQobnVtMik7CiAgICAgICAgICAgICAgY29kZVNob3cgPSBudW0xICsgJyAtICcgKyBudW0yICsgJyA9ID8nOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICB0aGlzLmNvZGVDaG9zZSA9IHBhcnNlSW50KG51bTEpICogcGFyc2VJbnQobnVtMik7CiAgICAgICAgICAgICAgY29kZVNob3cgPSBudW0xICsgJyDDlyAnICsgbnVtMiArICcgPSA/JzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLmNvZGVTaG93ID0gY29kZVNob3cuc3BsaXQoJycpOyAvLyDovazmlbDnu4QKICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBjaGVja0NvZGUKICAgICAqIEBkZXNjcmlwdGlvbiDpqozor4Hpqozor4HnoIEKICAgICAqICovCiAgICBjaGVja0NvZGU6IGZ1bmN0aW9uIGNoZWNrQ29kZSgpIHsKICAgICAgdmFyIGlucHV0VmFsdWU7CiAgICAgIHZhciBjb2RlQ2hvc2U7CgogICAgICBpZiAodGhpcy50eXBlID09PSAnMScpIHsKICAgICAgICAvL+aZrumAmumqjOivgeeggQogICAgICAgIGlucHV0VmFsdWUgPSB0aGlzLmlucHV0VmFsdWUudG9VcHBlckNhc2UoKTsKICAgICAgICBjb2RlQ2hvc2UgPSB0aGlzLmNvZGVDaG9zZS50b1VwcGVyQ2FzZSgpOwogICAgICB9IGVsc2UgewogICAgICAgIGlucHV0VmFsdWUgPSB0aGlzLmlucHV0VmFsdWU7CiAgICAgICAgY29kZUNob3NlID0gdGhpcy5jb2RlQ2hvc2U7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKGlucHV0VmFsdWUpOwogICAgICBjb25zb2xlLmxvZyhjb2RlQ2hvc2UpOwogICAgICBjb25zb2xlLmxvZyhpbnB1dFZhbHVlID09IGNvZGVDaG9zZSk7CgogICAgICBpZiAoaW5wdXRWYWx1ZSA9PSBjb2RlQ2hvc2UpIHsKICAgICAgICB0aGlzLmlzRW5kID0gdHJ1ZTsKICAgICAgICB0aGlzLiRwYXJlbnQuJGVtaXQoJ3N1Y2Nlc3MnLCB0aGlzKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRwYXJlbnQuJGVtaXQoJ2Vycm9yJywgdGhpcyk7CiAgICAgICAgdGhpcy5zZXRDb2RlKCk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiByZWZyZXNoCiAgICAgKiBAZGVzY3JpcHRpb24g5Yi35pawCiAgICAgKiAqLwogICAgcmVmcmVzaDogZnVuY3Rpb24gcmVmcmVzaCgpIHsKICAgICAgdGhpcy5pc0VuZCA9IGZhbHNlOwogICAgICB0aGlzLmlucHV0VmFsdWUgPSAnJzsKICAgICAgdGhpcy5zZXRDb2RlKCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgLy8gdHlwZeWPmOWMluWImeWFqOmdouWIt+aWsAogICAgdHlwZTogewogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7CiAgICAgICAgdGhpcy5pbml0KCk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyDnpoHmraLmi5bmi70KICAgIHRoaXMuJGVsLm9uc2VsZWN0c3RhcnQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH07CiAgfSwKICBpMThuOiB7CiAgICBtZXNzYWdlczogewogICAgICAnZW4tVVMnOiB7fSwKICAgICAgJ3poLUNOJzoge30KICAgIH0KICB9Cn07"},{"version":3,"sources":["VerifyCode.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"cerify-code-panel\">\n        <div class=\"verify-code\"\n             @click=\"setCode\"\n             :style=\"{\n                    'width': width,\n                    'height': height,\n                    'line-height': height,\n                    'font-size': fontSize,\n                    'background-color': containerBackgroundColor,\n                    'color': containerColor\n                }\">\n            <!-- 显示字符串 -->\n            <span :style=\"code.style\" v-for=\"code in codeShow\">\n                {{code.char || code}}\n            </span>\n        </div>\n        <div class=\"verify-code-area\" :style=\"{'width': width}\">\n            <div class=\"verify-input-area\">\n                <input type=\"text\" v-model=\"inputValue\" class=\"varify-input-code\"/>\n            </div>\n            <div class=\"verify-change-area\" @click=\"setCode\"><a class=\"verify-change-code\">换一张</a></div>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    /**\n     * Code\n     * @description 常规的图片文字识别或者数字计算\n     * */\n    import {_code_chars, _code_color1, _code_color2} from '../../lib/util'\n\n    export default {\n        name: 'VerifyCode',\n        props: {\n            type: {\n                type: String,\n                default: '1'\n            },\n            //位数，仅在type=2时生效\n            figure: {\n                type: Number,\n                default: 100\n            },\n            //算法，支持加减乘，0为随机，仅在type=2时生效\n            arith: {\n                type: Number,\n                default: 0\n            },\n            width: {\n                type: String,\n                default: '200px'\n            },\n            height: {\n                type: String,\n                default: '60px'\n            },\n            fontSize: {\n                type: String,\n                default: '30px'\n            },\n            codeLength: {\n                type: Number,\n                default: 6\n            }\n        },\n        data() {\n            return {\n                isEnd: false,\n                // 输入的值\n                inputValue: '',\n                // 颜色\n                containerBackgroundColor: '#fff',\n                containerColor: '#fff',\n\n                codeChose: '', // 应该输入的code\n                codeShow: [] // 显示用的\n            }\n        },\n        methods: {\n            init() {\n                this.setCode()\n\n                this.$parent.$emit('ready', this)\n            },\n\n            /**\n             * setCode\n             * @description 设置验证码\n             * */\n            setCode() {\n                if (this.isEnd == false) {\n\n                    this.containerBackgroundColor = _code_color1[Math.floor(Math.random() * 3)]\n                    this.containerColor = _code_color2[Math.floor(Math.random() * 5)]\n\n                    this.inputValue = ''\n\n                    this.codeShow = []\n                    this.codeChose = ''\n\n                    if (this.type === '1') {\t\t//普通验证码 图片选择\n                        for (var i = 0; i < this.codeLength; i++) {\n                            var charNum = Math.floor(Math.random() * 52)\n                            var tmpStyle = (charNum % 2 == 0) ? \"font-style:italic;margin-right: 10px\" : \"font-weight:bolder\"\n                            tmpStyle += (Math.floor(Math.random() * 2) == 1) ? \"font-weight:bolder\" : \"\"\n\n                            this.codeChose += _code_chars[charNum]\n                            this.codeShow.push({\n                                style: tmpStyle,\n                                char: _code_chars[charNum]\n                            })\n                        }\n                    } else if (this.type === '2') {\n                        // 算法验证码\n                        var num1 = Math.floor(Math.random() * this.figure)\n                        var num2 = Math.floor(Math.random() * this.figure)\n\n                        let codeShow = ''\n\n                        if (this.arith == 0) {\n                            var tmparith = Math.floor(Math.random() * 3)\n                        }\n\n                        switch (tmparith) {\n                            case 1 :\n                                this.codeChose = parseInt(num1) + parseInt(num2)\n                                codeShow = num1 + ' + ' + num2 + ' = ?'\n                                break\n                            case 2 :\n                                if (parseInt(num1) < parseInt(num2)) {\n                                    var tmpnum = num1\n                                    num1 = num2\n                                    num2 = tmpnum\n                                }\n                                this.codeChose = parseInt(num1) - parseInt(num2)\n                                codeShow = num1 + ' - ' + num2 + ' = ?'\n                                break\n                            default :\n                                this.codeChose = parseInt(num1) * parseInt(num2)\n                                codeShow = num1 + ' × ' + num2 + ' = ?'\n                                break\n                        }\n\n                        this.codeShow = codeShow.split('') // 转数组\n                    }\n                }\n            },\n            /**\n             * checkCode\n             * @description 验证验证码\n             * */\n            checkCode() {\n                let inputValue\n                let codeChose\n                if (this.type === '1') {\t\t//普通验证码\n                    inputValue = this.inputValue.toUpperCase()\n                    codeChose = this.codeChose.toUpperCase()\n                } else {\n                    inputValue = this.inputValue\n                    codeChose = this.codeChose\n                }\n\n                console.log(inputValue)\n                console.log(codeChose)\n                console.log(inputValue == codeChose)\n\n                if (inputValue == codeChose) {\n                    this.isEnd = true\n                    this.$parent.$emit('success', this)\n                } else {\n                    this.$parent.$emit('error', this)\n                    this.setCode()\n                }\n            },\n            /**\n             * refresh\n             * @description 刷新\n             * */\n            refresh() {\n                this.isEnd = false\n                this.inputValue = ''\n                this.setCode()\n            }\n        },\n        watch: {\n            // type变化则全面刷新\n            type: {\n                immediate: true,\n                handler() {\n                    this.init()\n                }\n            }\n        },\n        mounted() {\n            // 禁止拖拽\n            this.$el.onselectstart = function () {\n                return false\n            }\n        },\n        i18n: {\n            messages: {\n                'en-US': {},\n                'zh-CN': {}\n            }\n        }\n    }\n</script>"],"sourceRoot":"node_modules/vue2-verify/src/components/Verify"}]}