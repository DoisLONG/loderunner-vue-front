{"remainingRequest":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/babel-loader/lib/index.js!/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue2-verify/src/components/Verify/VerifySlide.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue2-verify/src/components/Verify/VerifySlide.vue","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifySlide.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"position: relative;\"\n         @mouseover=\"showImage = true\"\n         @mouseout=\"showImage = true\">\n        <!-- puzzle的情况 -->\n        <div v-if=\"type === '2'\" class=\"verify-img-out\"\n             v-show=\"showImage\"\n             @mouseover=\"showImage = true\"\n             @mouseout=\"showImage = true\"\n             :style=\"{display: mode === 'pop'?'none':undefined,\n                      position: mode === 'pop'?'absolute':'relative',\n                      height: (parseInt(setSize.imgHeight) + vSpace) + 'px',\n                      bottom: mode ==='pop'?'42px':undefined}\">\n            <div class=\"verify-img-panel\" :style=\"{width: setSize.imgWidth,\n                                                   height: setSize.imgHeight,\n                                                   background: 'url(' + imgUrl + imgName[imgRand]+')',\n                                                   'background-size' : setSize.imgWidth + ' '+ setSize.imgHeight}\">\n                <div class=\"verify-refresh\" @click=\"refresh\" v-show=\"showRefresh\"><i class=\"iconfont icon-refresh\"></i>\n                </div>\n                <div class=\"verify-gap\"\n                     :style=\"{'width': blockSize.width, 'height': blockSize.height, top: top + 'px', left: left + 'px'}\"></div>\n            </div>\n        </div>\n\n        <!-- 公共部分 -->\n        <div class=\"verify-bar-area\" :style=\"{width: setSize.barWidth,\n                                              height: barSize.height,\n                                              'line-height':barSize.height}\">\n            <span class=\"verify-msg\" v-text=\"text\"></span>\n            <div class=\"verify-left-bar\"\n                 :style=\"{width: (leftBarWidth!==undefined)?leftBarWidth: barSize.height, height: barSize.height, 'border-color': leftBarBorderColor, transaction: transitionWidth}\">\n                <span class=\"verify-msg\" v-text=\"finishText\"></span>\n                <div class=\"verify-move-block\"\n                     @touchstart=\"start\"\n                     @mousedown=\"start\"\n                     :style=\"{width: barSize.height, height: barSize.height, 'background-color': moveBlockBackgroundColor, left: moveBlockLeft, transition: transitionLeft}\">\n                    <i :class=\"['verify-icon iconfont', iconClass]\"\n                       :style=\"{color: iconColor}\"></i>\n                    <div v-if=\"type === '2'\"\n                         class=\"verify-sub-block\"\n                         :style=\"{'width': blockSize.width,\n                                  'height': blockSize.height,\n                                  'top': '-' + (parseInt(setSize.imgHeight) - top + vSpace) + 'px',\n                                  'background-image': 'url(' + imgUrl + imgName[this.imgRand] + ')',\n                                  'background-size': setSize.imgWidth + ' ' + setSize.imgHeight,\n                                  'background-position-y': '-' + top + 'px',\n                                  'background-position-x': '-' + left + 'px'}\"\n                         v-show=\"mode !== 'pop' && showImage\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    /**\n     * VerifySlide\n     * @description 滑块\n     * */\n    import {resetSize} from '../../lib/util'\n\n    export default {\n        name: 'VerifySlide',\n        props: {\n            type: {\n                type: String,\n                default: '1'\n            },\n            //弹出式pop，固定fixed\n            mode: {\n                type: String,\n                default: 'fixed'\n            },\n            vOffset: {\n                type: Number,\n                default: 5\n            },\n            vSpace: {\n                type: Number,\n                default: 5\n            },\n            explain: {\n                type: String,\n                default: '向右滑动完成验证'\n            },\n            imgUrl: {\n                type: String,\n                default: 'http://via.placeholder.com/'\n            },\n            imgName: {\n                type: Array,\n                default() {\n                    return ['350x150', '350x450']\n                }\n            },\n            imgSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '200px'\n                    }\n                }\n            },\n            blockSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '50px',\n                        height: '50px'\n                    }\n                }\n            },\n            barSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '40px'\n                    }\n                }\n            }\n        },\n        data() {\n            return {\n                imgRand: 0,\n                text: '',\n                finishText:'',\n                setSize: {\n                    imgHeight: 0,\n                    imgWidth: 0,\n                    barHeight: 0,\n                    barWidth: 0\n                },\n                top: 0,\n                left: 0,\n                showImage: true,\n                moveBlockLeft: undefined,\n                leftBarWidth: undefined,\n                // 移动中样式\n                moveBlockBackgroundColor: undefined,\n                leftBarBorderColor: '#ddd',\n                iconColor: undefined,\n                iconClass: 'icon-right',\n                status: false,\t//鼠标状态\n                isEnd: false,\t\t//是够验证完成\n                showRefresh: true,\n                transitionLeft: '',\n                transitionWidth: ''\n            }\n        },\n        computed: {\n            barArea() {\n                return this.$el.querySelector('.verify-bar-area')\n            },\n            resetSize() {\n                return resetSize\n            }\n        },\n        methods: {\n            init() {\n                this.text = this.explain\n                this.imgRand = Math.floor(Math.random() * this.imgName.length);\t\t\t//随机的背景图片\n\n                this.$nextTick(() => {\n                    let setSize = this.resetSize(this)\t//重新设置宽度高度\n                    // 监听的问题\n                    for (let key in setSize) {\n                        this.$set(this.setSize, key, setSize[key])\n                    }\n\n                    this.randSet()\n\n                    this.$parent.$emit('ready', this)\n                })\n\n                var _this = this\n\n                window.removeEventListener(\"touchmove\", function (e) {\n                    _this.move(e);\n                });\n                window.removeEventListener(\"mousemove\", function (e) {\n                    _this.move(e);\n                });\n\n                //鼠标松开\n                window.removeEventListener(\"touchend\", function () {\n                    _this.end();\n                });\n                window.removeEventListener(\"mouseup\", function () {\n                    _this.end();\n                });\n\n                window.addEventListener(\"touchmove\", function (e) {\n                    _this.move(e);\n                });\n                window.addEventListener(\"mousemove\", function (e) {\n                    _this.move(e);\n                });\n\n                //鼠标松开\n                window.addEventListener(\"touchend\", function () {\n                    _this.end();\n                });\n                window.addEventListener(\"mouseup\", function () {\n                    _this.end();\n                });\n\n            },\n\n            //鼠标按下\n            start: function (e) {\n                if (this.isEnd == false) {\n                    this.text = ''\n                    this.moveBlockBackgroundColor = '#337ab7'\n                    this.leftBarBorderColor = '#337AB7'\n                    this.iconColor = '#fff'\n                    e.stopPropagation();\n                    this.status = true;\n                }\n            },\n            //鼠标移动\n            move: function (e) {\n                if (this.status && this.isEnd == false) {\n//                    if (this.mode == 'pop') {\n//                        this.showImage = true\n//                    }\n\n                    if (!e.touches) {    //兼容移动端\n                        var x = e.clientX;\n                    } else {     //兼容PC端\n                        var x = e.touches[0].pageX;\n                    }\n                    var bar_area_left = this.getLeft(this.barArea);\n                    var move_block_left = x - bar_area_left //小方块相对于父元素的left值\n\n                    if (this.type !== '1') {\t\t//图片滑动\n                        if (move_block_left >= this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2) {\n                            move_block_left = this.barArea.offsetWidth - parseInt(parseInt(this.blockSize.width) / 2) - 2;\n                        }\n\n                    } else {\t\t//普通滑动\n                        if (move_block_left >= this.barArea.offsetWidth - parseInt(parseInt(this.barSize.height) / 2) + 3) {\n                            this.finishText = '松开验证'\n                            move_block_left = this.barArea.offsetWidth - parseInt(parseInt(this.barSize.height) / 2) + 3;\n                        } else {\n                            this.finishText = ''\n                        }\n                    }\n\n                    if (move_block_left <= 0) {\n                        move_block_left = parseInt(parseInt(this.blockSize.width) / 2);\n                    }\n\n                    //拖动后小方块的left值\n                    this.moveBlockLeft = (move_block_left - parseInt(parseInt(this.blockSize.width) / 2) ) + \"px\"\n                    this.leftBarWidth = (move_block_left - parseInt(parseInt(this.blockSize.width) / 2)) + \"px\"\n                }\n            },\n\n            //鼠标松开\n            end: function () {\n                var _this = this;\n\n//                判断是否重合\n                if (this.status && this.isEnd == false) {\n\n                    if (this.type !== '1') {\t\t//图片滑动\n\n                        var vOffset = parseInt(this.vOffset)\n                        if (parseInt(this.left) >= (parseInt((this.moveBlockLeft || '').replace('px', '')) - vOffset) &&\n                            parseInt(this.left) <= (parseInt((this.moveBlockLeft || '').replace('px', '')) + vOffset)) {\n                            this.moveBlockBackgroundColor = '#5cb85c'\n//                            this.htmlDoms.left_bar.css({'border-color': '#5cb85c', 'background-color': '#fff'});\n                            this.leftBarBorderColor = '#5cb85c'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-check'\n                            this.showRefresh = false\n                            this.isEnd = true;\n                            this.$parent.$emit('success', this)\n\n                        } else {\n                            this.moveBlockBackgroundColor = '#d9534f'\n                            this.leftBarBorderColor = '#d9534f'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-close'\n\n\n                            setTimeout(function () {\n                                _this.refresh();\n                            }, 400);\n\n                            this.$parent.$emit('error', this)\n                        }\n\n                    } else {\t\t//普通滑动\n\n                        if (parseInt((this.moveBlockLeft || '').replace('px', '')) >= (parseInt(this.setSize.barWidth) - parseInt(this.barSize.height) - parseInt(this.vOffset))) {\n                            this.moveBlockBackgroundColor = '#5cb85c'\n//                            this.htmlDoms.left_bar.css({\n//                                'color': '#4cae4c',\n//                                'border-color': '#5cb85c',\n//                                'background-color': '#fff'\n//                            });\n                            this.leftBarBorderColor = '#5cb85c'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-check'\n                            this.showRefresh = false\n                            this.finishText = '验证成功'\n                            this.isEnd = true;\n                            this.$parent.$emit('success', this)\n                        } else {\n                            this.finishText = ''\n                            this.moveBlockBackgroundColor = '#d9534f'\n                            this.leftBarBorderColor = '#d9534f'\n                            this.iconColor = '#fff'\n                            this.iconClass = 'icon-close'\n                            this.isEnd = true;\n\n                            setTimeout(function () {\n                                _this.finishText = ''\n                                _this.refresh()\n                                _this.isEnd = false\n                            }, 400);\n\n                            this.$parent.$emit('error', this)\n                        }\n                    }\n\n                    this.status = false;\n                }\n            },\n\n            //随机出生点位\n            randSet: function () {\n                var rand1 = Math.floor(Math.random() * 9 + 1);\n                var rand2 = Math.floor(Math.random() * 9 + 1);\n                var top = rand1 * parseInt(this.setSize.imgHeight) / 15 + parseInt(this.setSize.imgHeight) * 0.1;\n                var left = rand2 * parseInt(this.setSize.imgWidth) / 15 + parseInt(this.setSize.imgWidth) * 0.1;\n\n                this.top = top\n                this.left = left\n            },\n\n            refresh: function () {\n                this.showRefresh = true\n                this.finishText = ''\n\n                this.transitionLeft = 'left .3s'\n                this.moveBlockLeft = 0\n\n                this.leftBarWidth = undefined\n                this.transitionWidth = 'width .3s'\n\n                this.leftBarBorderColor = '#ddd'\n                this.moveBlockBackgroundColor = '#fff'\n                this.iconColor = '#000'\n                this.iconClass = 'icon-right'\n\n                this.randSet()\n                this.imgRand = Math.floor(Math.random() * this.imgName.length);\t\t\t//随机的背景图片\n\n                // @todo 检查重启\n//                this.$element.find('.verify-img-panel').css({'background': 'url('+ this.options.imgUrl +this.options.imgName[this.img_rand]+')', 'background-size': this.setSize.img_width + ' '+ this.setSize.img_height});\n//                this.$element.find('.verify-sub-block').css({'background-image': 'url('+ this.options.imgUrl +this.options.imgName[this.img_rand]+')', 'background-size': this.setSize.img_width + ' '+ this.setSize.img_height});\n//\n                this.isEnd = false\n\n                setTimeout(() => {\n                    this.transitionWidth = ''\n                    this.transitionLeft = ''\n                    this.text = this.explain\n                }, 300)\n            },\n\n            //获取left值\n            getLeft: function (node) {\n                let leftValue = 0;\n                while (node) {\n                    leftValue += node.offsetLeft;\n                    node = node.offsetParent;\n                }\n                let finalvalue = leftValue;\n                return finalvalue;\n            }\n        },\n        watch: {\n            // type变化则全面刷新\n            type: {\n                immediate: true,\n                handler() {\n                    this.init()\n                }\n            }\n        },\n        mounted() {\n            // 禁止拖拽\n            this.$el.onselectstart = function () {\n                return false\n            }\n        },\n        i18n: {\n            messages: {\n                'en-US': {},\n                'zh-CN': {}\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"node_modules/vue2-verify/src/components/Verify"}]}