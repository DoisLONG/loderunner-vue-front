{"remainingRequest":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/babel-loader/lib/index.js!/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue2-verify/src/components/Verify/VerifyPoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue2-verify/src/components/Verify/VerifyPoints.vue","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/daocloud_j/git/loderunner-vue-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifyPoints.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"position: relative\"\n         @mouseover=\"mode === 'pop'?(showImage = true):undefined\"\n         @mouseout=\"mode === 'pop'?(showImage = false):undefined\">\n        <div class=\"verify-img-out\"\n             v-show=\"showImage\"\n             @mouseover=\"mode === 'pop'?(showImage = true):undefined\"\n             @mouseout=\"mode === 'pop'?(showImage = false):undefined\"\n             :style=\"mode === 'pop' ?\n                                {display: 'none', position: 'absolute', bottom: '42px', height: parseInt(setSize.imgHeight) + vSpace + 'px'} :\n                                {position: 'relative', height: parseInt(setSize.imgHeight) + vSpace + 'px'}\">\n            <div class=\"verify-img-panel\" :style=\"{'width': setSize.imgWidth,\n                                                   'height': setSize.imgHeight,\n                                                   'background-size' : setSize.imgWidth + ' '+ setSize.imgHeight,\n                                                   'margin-bottom': vSpace + 'px'}\">\n                <div class=\"verify-refresh\" style=\"z-index:3\" @click=\"refresh\" v-show=\"showRefresh\">\n                    <i class=\"iconfont icon-refresh\"></i>\n                </div>\n                <canvas :width=\"setSize.imgWidth\" :height=\"setSize.imgHeight\"\n                        ref=\"canvas\"\n                        @click=\"bindingClick?canvasClick($event):undefined\"></canvas>\n                <div v-for=\"(tempPoint, index) in tempPoints\" :key=\"index\" class=\"point-area\"\n                     :style=\"{\n                        'background-color':'#1abd6c',\n                        color:'#fff',\n                        'z-index':9999,\n                        width:'30px',\n                        height:'30px',\n                        'text-align':'center',\n                        'line-height':'30px',\n                        'border-radius': '50%',\n                        position:'absolute',\n                        top:parseInt(tempPoint.y-10) + 'px',\n                        left:parseInt(tempPoint.x-10) + 'px'\n                     }\">\n                    {{index + 1}}\n                </div>\n            </div>\n        </div>\n        <div class=\"verify-bar-area\"\n             :style=\"{'width': this.barSize.width,\n                      'height': this.barSize.height,\n                      'color': this.barAreaColor,\n                      'border-color': this.barAreaBorderColor,\n                      'line-height':this.barSize.height}\">\n            <span class=\"verify-msg\">{{text}}</span>\n        </div>\n    </div>\n</template>\n<script type=\"text/babel\">\n    /**\n     * VerifyPoints\n     * @description 点选\n     * */\n\n    import {resetSize, _code_chars, _code_color1, _code_color2} from '../../lib/util'\n\n    function getOffset(Node, offset = {top: 0, left: 0}) {\n        if (Node == document.body) {//当该节点为body节点时，结束递归\n            return offset;\n        }\n\n        offset.top += Node.offsetTop;\n        offset.left += Node.offsetLeft;\n\n        return getOffset(Node.parentNode, offset);//向上累加offset里的值\n    }\n\n    export default {\n        name: 'VerifyPoints',\n        props: {\n            //弹出式pop，固定fixed\n            mode: {\n                type: String,\n                default: 'fixed'\n            },\n            //默认的文字数量\n            defaultNum: {\n                type: Number,\n                default: 4\n            },\n            //校对的文字数量\n            checkNum: {\n                type: Number,\n                default: 3\n            },\n            //间隔\n            vSpace: {\n                type: Number,\n                default: 5\n            },\n            imgUrl: {\n                type: String,\n                default: 'http://via.placeholder.com/'\n            },\n            imgName: {\n                type: Array,\n                default() {\n                    return ['350x150', '350x450']\n                }\n            },\n            imgSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '200px'\n                    }\n                }\n            },\n            barSize: {\n                type: Object,\n                default() {\n                    return {\n                        width: '400px',\n                        height: '40px'\n                    }\n                }\n            }\n        },\n        data() {\n            return {\n                fontPos: [], // 选中的坐标信息\n                checkPosArr: [], //用户点击的坐标\n                num: 1,//点击的记数\n                imgRand: 0, // //随机的背景图片\n                setSize: {\n                    imgHeight: 0,\n                    imgWidth: 0,\n                    barHeight: 0,\n                    barWidth: 0\n                },\n                showImage: true,\n                tempPoints: [],\n                text: '',\n                barAreaColor: undefined,\n                barAreaBorderColor: undefined,\n                showRefresh: true,\n                bindingClick: true\n            }\n        },\n        computed: {\n            resetSize() {\n                return resetSize\n            }\n        },\n        methods: {\n            init() {\n                //加载页面\n                this.fontPos.splice(0, this.fontPos.length)\n                this.checkPosArr.splice(0, this.checkPosArr.length)\n                this.num = 1\n                this.imgRand = Math.floor(Math.random() * this.imgName.length)\n\n                this.$nextTick(() => {\n                    this.setSize = this.resetSize(this)\t//重新设置宽度高度\n                    this.refresh();\n                    this.$parent.$emit('ready', this)\n                })\n\n            },\n            canvasClick(e) {\n                this.checkPosArr.push(this.getMousePos(this.$refs.canvas, e));\n                if (this.num == this.checkNum) {\n\n                    this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e));\n                    setTimeout(() => {\n                        var flag = this.comparePos(this.fontPos, this.checkPosArr);\n                        if (flag == false) {\t//验证失败\n                            this.$parent.$emit('error', this)\n                            this.barAreaColor = '#d9534f'\n                            this.barAreaBorderColor = '#d9534f'\n                            this.text = '验证失败'\n\n                            setTimeout(() => {\n                                this.refresh();\n                            }, 400);\n\n                        } else {\t//验证成功\n                            this.barAreaColor = '#4cae4c'\n                            this.barAreaBorderColor = '#5cb85c'\n                            this.text = '验证成功'\n                            this.showRefresh = false\n                            this.bindingClick = false\n                            this.$parent.$emit('success', this)\n                        }\n                    }, 400);\n\n                }\n\n                if (this.num < this.checkNum) {\n                    this.num = this.createPoint(this.getMousePos(this.$refs.canvas, e));\n                }\n\n            },\n            //绘制合成的图片\n            drawImg: function (obj, img) {\n                //准备canvas环境\n                var canvas = this.$refs.canvas;\n                var ctx = canvas.getContext(\"2d\");\n\n                // 绘制图片\n                ctx.drawImage(img, 0, 0, parseInt(this.setSize.imgWidth), parseInt(this.setSize.imgHeight));\n\n                // 绘制水印\n                var fontSizeArr = ['italic small-caps bold 20px microsoft yahei', 'small-caps normal 25px arial', '34px microsoft yahei'];\n                var fontStr = '天地玄黄宇宙洪荒日月盈昃辰宿列张寒来暑往秋收冬藏闰余成岁律吕调阳云腾致雨露结为霜金生丽水玉出昆冈剑号巨阙珠称夜光果珍李柰菜重芥姜海咸河淡鳞潜羽翔龙师火帝鸟官人皇始制文字乃服衣裳推位让国有虞陶唐吊民伐罪周发殷汤坐朝问道垂拱平章爱育黎首臣伏戎羌遐迩体率宾归王';\t//不重复的汉字\n\n\n                var fontChars = [];\n\n                var avg = Math.floor(parseInt(this.setSize.imgWidth) / (parseInt(this.defaultNum) + 1));\n                var tmp_index = '';\n                var color2Num = Math.floor(Math.random() * 5);\n\n                for (var i = 1; i <= this.defaultNum; i++) {\n\n                    fontChars[i - 1] = this.getChars(fontStr, fontChars);\n\n                    tmp_index = Math.floor(Math.random() * 3);\n                    ctx.font = fontSizeArr[tmp_index];\n                    ctx.fillStyle = _code_color2[color2Num];\n\n                    if (Math.floor(Math.random() * 2) == 1) {\n                        var tmp_y = Math.floor(parseInt(this.setSize.imgHeight) / 2) + tmp_index * 20 + 20\n                    } else {\n                        var tmp_y = Math.floor(parseInt(this.setSize.imgHeight) / 2) - tmp_index * 20\n                    }\n\n                    ctx.fillText(fontChars[i - 1], avg * i, tmp_y);\n                    this.fontPos[i - 1] = {'char': fontChars[i - 1], 'x': avg * i, 'y': tmp_y}\n                }\n\n                for (var i = 0; i < (this.defaultNum - this.checkNum); i++) {\n                    this.shuffle(this.fontPos).pop();\n                }\n\n                var msgStr = '';\n                for (var i = 0; i < this.fontPos.length; i++) {\n                    msgStr += this.fontPos[i].char + ',';\n                }\n\n                this.text = '请顺序点击【' + msgStr.substring(0, msgStr.length - 1) + '】'\n\n                return this.fontPos;\n            },\n            //获取坐标\n            getMousePos: function (obj, e) {\n                var x = e.offsetX - 5\n                var y = e.offsetY - 5\n\n                return {x, y}\n            },\n            //递归去重\n            getChars: function (fontStr, fontChars) {\n\n                var tmp_rand = parseInt(Math.floor(Math.random() * fontStr.length));\n                if (tmp_rand > 0) {\n                    tmp_rand = tmp_rand - 1;\n                }\n\n                var tmp_char = fontStr.charAt(tmp_rand);\n                if (fontChars.indexOf(tmp_char) == -1) {\n                    return tmp_char;\n                } else {\n                    return this.getChars(fontStr, fontChars);\n                }\n            },\n            //洗牌数组\n            shuffle: function (arr) {\n                var m = arr.length, i;\n                var tmpF;\n                while (m) {\n                    i = (Math.random() * m--) >>> 0;\n                    tmpF = arr[m];\n                    arr[m] = arr[i];\n                    arr[i] = tmpF;\n                    //[arr[m], arr[i]] = [arr[i], arr[m]];\t//低版本浏览器不支持此写法\n                }\n                return arr;\n            },\n            //创建坐标点\n            createPoint: function (pos) {\n                this.tempPoints.push(Object.assign({}, pos))\n                return ++this.num;\n            },\n            comparePos: function (fontPos, checkPosArr) {\n                var flag = true;\n                for (var i = 0; i < fontPos.length; i++) {\n                    if (!(parseInt(checkPosArr[i].x) + 40 > fontPos[i].x && parseInt(checkPosArr[i].x) - 40 < fontPos[i].x && parseInt(checkPosArr[i].y) + 40 > fontPos[i].y && parseInt(checkPosArr[i].y) - 40 < fontPos[i].y)) {\n                        flag = false;\n                        break;\n                    }\n                }\n\n                return flag;\n            },\n            refresh: function () {\n                this.tempPoints.splice(0, this.tempPoints.length)\n                this.barAreaColor = '#000'\n                this.barAreaBorderColor = '#ddd'\n                this.bindingClick = true\n\n                this.fontPos.splice(0, this.fontPos.length)\n                this.checkPosArr.splice(0, this.checkPosArr.length)\n                this.num = 1\n\n                this.imgRand = Math.floor(Math.random() * this.imgName.length);\t\t\t//随机的背景图片\n                var img = new Image();\n                img.src = this.imgUrl + this.imgName[this.imgRand];\n                // 加载完成开始绘制\n                var _this = this\n                img.onload = function (e) {\n                    _this.$nextTick(() => {\n                        _this.fontPos = _this.drawImg(_this.$el, this)\n                    })\n                }\n\n                this.text = '验证失败'\n                this.showRefresh = true\n            }\n        },\n        watch: {\n            // type变化则全面刷新\n            type: {\n                immediate: true,\n                handler() {\n                    this.init()\n                }\n            }\n        },\n        mounted() {\n            // 禁止拖拽\n            this.$el.onselectstart = function () {\n                return false\n            }\n        },\n        i18n: {\n            messages: {\n                'en-US': {},\n                'zh-CN': {}\n            }\n        }\n    }\n</script>"],"sourceRoot":"node_modules/vue2-verify/src/components/Verify"}]}